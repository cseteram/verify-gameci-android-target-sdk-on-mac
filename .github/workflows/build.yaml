name: Build project

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  UNITY_VERSION: ${{ vars.UNITY_VERSION }}
  JAVA_HOME: /Applications/Unity/Hub/Editor/${{ vars.UNITY_VERSION }}/PlaybackEngines/AndroidPlayer/OpenJDK
  ANDROID_HOME: /Applications/Unity/Hub/Editor/${{ vars.UNITY_VERSION }}/PlaybackEngines/AndroidPlayer/SDK

jobs:
  build:
    name: Build for Android
    runs-on: macos-latest
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        android-target-sdk:
          - AndroidApiLevel28
          - AndroidApiLevel29
          - AndroidApiLevel30
          - AndroidApiLevel31
          - AndroidApiLevel32
          - AndroidApiLevel33
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-Android-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-Android-
            Library-
      - name: Build
        uses: game-ci/unity-builder@fb5b03c3b86756ea6864b3da6a965aa05f363ed0
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          unityVersion: ${{ env.UNITY_VERSION }}
          targetPlatform: Android
          androidTargetSdkVersion: ${{ matrix.android-target-sdk }}
      - name: Inspect build result
        run: |
          input_target_sdk=${{ matrix.android-target-sdk }}
          unity_target_sdk=$(cat ProjectSettings/ProjectSettings.asset | yq .'PlayerSettings.AndroidTargetSdkVersion')

          echo "## Unity Version"
          echo "$UNITY_VERSION"
          echo

          echo "## Android Target SDK Version"
          echo "- Input : $input_target_sdk"
          echo "- PlayerSettings : $unity_target_sdk"

          echo "## Installed Android SDK Platforms"
          ls ${ANDROID_HOME}/platforms | head | awk '{print "- "$0}'
          echo

          echo "## Androidmanifest"
          "${ANDROID_HOME}/tools/bin/apkanalyzer" manifest print $(find ./build -type f -name '*.apk')
          echo
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Build-Android-${{ matrix.android-target-sdk }}
          path: build/Android
          if-no-files-found: error
          retention-days: 7

  build-on-pr:
    name: Build for Android (PR)
    runs-on: macos-latest
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        android-target-sdk:
          - AndroidApiLevel28
          - AndroidApiLevel29
          - AndroidApiLevel30
          - AndroidApiLevel31
          - AndroidApiLevel32
          - AndroidApiLevel33
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-Android-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-Android-
            Library-
      - name: Build
        uses: cseteram/unity-builder@main
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          unityVersion: ${{ env.UNITY_VERSION }}
          targetPlatform: Android
          androidTargetSdkVersion: ${{ matrix.android-target-sdk }}
      - name: Inspect build result
        run: |
          input_target_sdk=${{ matrix.android-target-sdk }}
          unity_target_sdk=$(cat ProjectSettings/ProjectSettings.asset | yq .'PlayerSettings.AndroidTargetSdkVersion')

          echo "## Unity Version"
          echo "$UNITY_VERSION"
          echo

          echo "## Android Target SDK Version"
          echo "- Input : $input_target_sdk"
          echo "- PlayerSettings : $unity_target_sdk"

          echo "## Installed Android SDK Platforms"
          ls ${ANDROID_HOME}/platforms | head | awk '{print "- "$0}'
          echo

          echo "## Androidmanifest"
          "${ANDROID_HOME}/tools/bin/apkanalyzer" manifest print $(find ./build -type f -name '*.apk')
          echo
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Build-Android-PR-${{ matrix.android-target-sdk }}
          path: build/Android
          if-no-files-found: error
          retention-days: 7
